// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/FileEntity.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace FileUploadService {
  public static partial class FileUploadService
  {
    static readonly string __ServiceName = "FileEntity.FileUploadService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.UploadFileEntityDto> __Marshaller_FileEntity_UploadFileEntityDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.UploadFileEntityDto.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.BaseResultFileEntityDto> __Marshaller_FileEntity_BaseResultFileEntityDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.BaseResultFileEntityDto.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.DownloadFileEntityDto> __Marshaller_FileEntity_DownloadFileEntityDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.DownloadFileEntityDto.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.BaseResultDownloadedFileEntityDto> __Marshaller_FileEntity_BaseResultDownloadedFileEntityDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.BaseResultDownloadedFileEntityDto.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.FileEntityId> __Marshaller_FileEntity_FileEntityId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.FileEntityId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.ProjectId> __Marshaller_FileEntity_ProjectId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.ProjectId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FileUploadService.CollectionResultFileEntityDto> __Marshaller_FileEntity_CollectionResultFileEntityDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FileUploadService.CollectionResultFileEntityDto.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FileUploadService.UploadFileEntityDto, global::FileUploadService.BaseResultFileEntityDto> __Method_UploadFileAsync = new grpc::Method<global::FileUploadService.UploadFileEntityDto, global::FileUploadService.BaseResultFileEntityDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadFileAsync",
        __Marshaller_FileEntity_UploadFileEntityDto,
        __Marshaller_FileEntity_BaseResultFileEntityDto);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FileUploadService.DownloadFileEntityDto, global::FileUploadService.BaseResultDownloadedFileEntityDto> __Method_DownloadFileAsync = new grpc::Method<global::FileUploadService.DownloadFileEntityDto, global::FileUploadService.BaseResultDownloadedFileEntityDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadFileAsync",
        __Marshaller_FileEntity_DownloadFileEntityDto,
        __Marshaller_FileEntity_BaseResultDownloadedFileEntityDto);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FileUploadService.FileEntityId, global::FileUploadService.BaseResultFileEntityDto> __Method_DeleteFileAsync = new grpc::Method<global::FileUploadService.FileEntityId, global::FileUploadService.BaseResultFileEntityDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFileAsync",
        __Marshaller_FileEntity_FileEntityId,
        __Marshaller_FileEntity_BaseResultFileEntityDto);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FileUploadService.ProjectId, global::FileUploadService.CollectionResultFileEntityDto> __Method_GetFilesByProjectId = new grpc::Method<global::FileUploadService.ProjectId, global::FileUploadService.CollectionResultFileEntityDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFilesByProjectId",
        __Marshaller_FileEntity_ProjectId,
        __Marshaller_FileEntity_CollectionResultFileEntityDto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::FileUploadService.FileEntityReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FileUploadService</summary>
    [grpc::BindServiceMethod(typeof(FileUploadService), "BindService")]
    public abstract partial class FileUploadServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FileUploadService.BaseResultFileEntityDto> UploadFileAsync(global::FileUploadService.UploadFileEntityDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FileUploadService.BaseResultDownloadedFileEntityDto> DownloadFileAsync(global::FileUploadService.DownloadFileEntityDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FileUploadService.BaseResultFileEntityDto> DeleteFileAsync(global::FileUploadService.FileEntityId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FileUploadService.CollectionResultFileEntityDto> GetFilesByProjectId(global::FileUploadService.ProjectId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FileUploadService</summary>
    public partial class FileUploadServiceClient : grpc::ClientBase<FileUploadServiceClient>
    {
      /// <summary>Creates a new client for FileUploadService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FileUploadServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FileUploadService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FileUploadServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FileUploadServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FileUploadServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultFileEntityDto UploadFileAsync(global::FileUploadService.UploadFileEntityDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultFileEntityDto UploadFileAsync(global::FileUploadService.UploadFileEntityDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultFileEntityDto> UploadFileAsyncAsync(global::FileUploadService.UploadFileEntityDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadFileAsyncAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultFileEntityDto> UploadFileAsyncAsync(global::FileUploadService.UploadFileEntityDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultDownloadedFileEntityDto DownloadFileAsync(global::FileUploadService.DownloadFileEntityDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultDownloadedFileEntityDto DownloadFileAsync(global::FileUploadService.DownloadFileEntityDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultDownloadedFileEntityDto> DownloadFileAsyncAsync(global::FileUploadService.DownloadFileEntityDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadFileAsyncAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultDownloadedFileEntityDto> DownloadFileAsyncAsync(global::FileUploadService.DownloadFileEntityDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultFileEntityDto DeleteFileAsync(global::FileUploadService.FileEntityId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.BaseResultFileEntityDto DeleteFileAsync(global::FileUploadService.FileEntityId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultFileEntityDto> DeleteFileAsyncAsync(global::FileUploadService.FileEntityId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFileAsyncAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.BaseResultFileEntityDto> DeleteFileAsyncAsync(global::FileUploadService.FileEntityId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFileAsync, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.CollectionResultFileEntityDto GetFilesByProjectId(global::FileUploadService.ProjectId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFilesByProjectId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::FileUploadService.CollectionResultFileEntityDto GetFilesByProjectId(global::FileUploadService.ProjectId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFilesByProjectId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.CollectionResultFileEntityDto> GetFilesByProjectIdAsync(global::FileUploadService.ProjectId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFilesByProjectIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::FileUploadService.CollectionResultFileEntityDto> GetFilesByProjectIdAsync(global::FileUploadService.ProjectId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFilesByProjectId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override FileUploadServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FileUploadServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FileUploadServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UploadFileAsync, serviceImpl.UploadFileAsync)
          .AddMethod(__Method_DownloadFileAsync, serviceImpl.DownloadFileAsync)
          .AddMethod(__Method_DeleteFileAsync, serviceImpl.DeleteFileAsync)
          .AddMethod(__Method_GetFilesByProjectId, serviceImpl.GetFilesByProjectId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FileUploadServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_UploadFileAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FileUploadService.UploadFileEntityDto, global::FileUploadService.BaseResultFileEntityDto>(serviceImpl.UploadFileAsync));
      serviceBinder.AddMethod(__Method_DownloadFileAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FileUploadService.DownloadFileEntityDto, global::FileUploadService.BaseResultDownloadedFileEntityDto>(serviceImpl.DownloadFileAsync));
      serviceBinder.AddMethod(__Method_DeleteFileAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FileUploadService.FileEntityId, global::FileUploadService.BaseResultFileEntityDto>(serviceImpl.DeleteFileAsync));
      serviceBinder.AddMethod(__Method_GetFilesByProjectId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FileUploadService.ProjectId, global::FileUploadService.CollectionResultFileEntityDto>(serviceImpl.GetFilesByProjectId));
    }

  }
}
#endregion
